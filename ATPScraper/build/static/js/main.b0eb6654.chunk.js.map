{"version":3,"sources":["RenderJSON.js","components/Top10/Topten.js","components/PlayerOverview/PlayerOverview.js","App.js","serviceWorker.js","index.js"],"names":["RenderJSON","props","json_text","divStyle","fontSize","react_default","a","createElement","wrap","readOnly","rows","cols","style","value","className","title","extra","extra_query","Topten","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","axios","get","then","response","setState","data","state","textedJSON","JSON","stringify","undefined","RenderJSON_RenderJSON","Component","_callee","player","url","player_extra","final_url","regenerator_default","_context","prev","next","abrupt","sent","stop","PlayerOverviewHidden","player_name","_useState","useState","_useState2","slicedToArray","setTextedJSON","getPlayerOverview","url_extra","player_extra_new","p_o","commonProps","objectSpread","PlayerOverview","_useState3","_useState4","playerName","setPlayerName","_useState5","_useState6","player_extraName","setPlayerExtraName","modProps","onChange","e","preventDefault","target","placeholder","App","components_Top10_Topten","components_PlayerOverview_PlayerOverview","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0eb6654.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./RenderJSON.css\";\n\nfunction RenderJSON(props) {\n  const divStyle = {\n    fontSize: props.fontSize || \"23px\"\n  };\n  let json_text;\n  if (props.json_text === '\"\"') {\n    json_text = <div />;\n  } else {\n    json_text = (\n      <div>\n        <textarea\n          wrap=\"off\"\n          readOnly\n          rows={props.rows || 20}\n          cols={props.cols || 30}\n          style={divStyle}\n          value={props.json_text}\n          className=\"top-10\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className=\"holder\">\n      <div className=\"title\">{props.title}</div>\n      {props.extra}\n      {props.extra_query}\n      {json_text}\n    </div>\n  );\n}\n\nexport { RenderJSON };\n","import React, { Component } from \"react\";\nimport {RenderJSON} from \"../../RenderJSON\"\nimport axios from \"axios\";\nimport \"./Topten.css\";\n\nclass Topten extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  }\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    axios.get(\"/api/top_10\").then(response => {\n      this.setState({ data: response.data });\n    });\n  };\n  render() {\n\t  const textedJSON = JSON.stringify(this.state.data, undefined, 4);\n\t  // let json_text;\n\t  // if (Object.entries(this.state.data).length === 0 && this.state.data.constructor === Object) {\n\t\t  // json_text = <div></div>;\n\t  // } else {\n\t\t  // json_text = <div><textarea rows=\"20\" cols=\"30\" defaultValue={textedJSON} className=\"top-10\"></textarea></div>;\n\t  // }\n\t  \n    return (\n      <div>\n\t\t  <RenderJSON title=\"Top Ten\" json_text={textedJSON} />\n      </div>\n    );\n  }\n}\n\nexport default Topten;\n","import React, { useState } from \"react\";\nimport { RenderJSON } from \"../../RenderJSON\";\nimport axios from \"axios\";\n\nasync function getPlayerOverview(player, url, extra, player_extra) {\n  // const url = \"/api/player_overview/\";\n  let final_url;\n  if (extra !== undefined && extra !== null) {\n    final_url = url + player + extra + player_extra;\n  } else {\n    final_url = url + player;\n  }\n  return await axios.get(final_url);\n}\n\nfunction PlayerOverviewHidden(props) {\n  let player_name = props.player_name || \"Roger Federer\";\n\n  let play_overview;\n  const [textedJSON, setTextedJSON] = useState(null);\n  play_overview = getPlayerOverview(\n    player_name,\n    props.url,\n    props.url_extra,\n    props.player_extra_new\n  );\n\n  play_overview.then(p_o => {\n    setTextedJSON(JSON.stringify(p_o.data, undefined, 4));\n  });\n\n  if (textedJSON === null) {\n    return <div>Loading...</div>;\n  } else {\n    const commonProps = {\n      fontSize: \"18px\",\n      json_text: textedJSON,\n      rows: 20,\n      cols: 80,\n      ...props\n    };\n    return (\n      <div>\n        <RenderJSON {...commonProps} />\n      </div>\n    );\n  }\n}\n\nconst PlayerOverview = props => {\n  const [playerName, setPlayerName] = useState(props.player);\n  const [player_extraName, setPlayerExtraName] = useState(props.player_extra);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setPlayerName(e.target.value || props.player);\n  }\n  function handleChange_query(e) {\n    e.preventDefault();\n    setPlayerExtraName(e.target.value || props.player_extra);\n  }\n\n  const modProps = {\n    extra: (\n      <span className=\"inputHolder\">\n        {props.url}\n        <input onChange={handleChange} placeholder={props.player} />\n      </span>\n    ),\n    extra_query: (\n      <span className=\"inputHolder\">\n        {props.url_extra ? props.url_extra : \"\"}\n        {props.player_extra ? (\n          <input\n            onChange={handleChange_query}\n            placeholder={props.player_extra}\n          />\n        ) : (\n          \"\"\n        )}\n      </span>\n    ),\n    player_name: playerName,\n    player_extra_new: player_extraName,\n    url: props.url,\n    ...props\n  };\n  return (\n    <div>\n      <PlayerOverviewHidden {...modProps} />\n    </div>\n  );\n};\n\nexport default PlayerOverview;\n","import React from \"react\";\nimport Topten from \"./components/Top10/Topten\";\nimport PlayerOverview from \"./components/PlayerOverview/PlayerOverview\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Topten />\n        <PlayerOverview\n          title=\"Player Overview\"\n          url=\"/api/player_overview/\"\n          player=\"Roger Federer\"\n        />\n        <PlayerOverview\n          title=\"Tournament Overview\"\n          url=\"/api/tournament_overview/\"\n          player=\"Wimbledon\"\n        />\n        <PlayerOverview\n          title=\"Player Win/Loss\"\n          url=\"/api/player_win_loss/\"\n          player=\"Roger Federer\"\n        />\n        <PlayerOverview\n          title=\"Player Win/Loss\"\n          url=\"/api/player_win_loss/\"\n          player=\"Roger Federer\"\n          url_extra=\"?tour=\"\n          player_extra=\"*\"\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}